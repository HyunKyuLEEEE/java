중첩 반복문
반복문 안에 반복문이 들어가는 형태가 중첩 반복문
실행문 대신 반복문이 들어간거라 생각하면 됨

분기문
break - 반복문에서 break문은 자신이 포함된 가장 가까운 반복문으로 빠져나가는 구문
	반드시 조건문이랑 와야함, 아니여도 상관없지만 사용하면 의미가 없어짐

continue - 스킵, 반복문 내에서만 사용가능하며 반복문 실행 시 continue 아래 부분은 실행하지 않고
		반복문 다시 실행. for문의 경우 증감식으로 이동, while문인 경우는 조건식으로 이동
		전체 반복중에서 특정 조건을 만족하는 경우를 제외하고자 할 때 유용

1. 변수
 - 변수 선언을 할 수 있다.
 - 변수 선언 방법
자료형 변수명;
자료형 변수명 = 초기값;
 - 자료형 종류
 - 변수명 작성 규칙과 관례
 - 자료형 변환
  -- 자동/ 강제
 - Scanner 사용 방법 : 콘솔에서 입력
 - sysout 사용방법 : 콘솔에  출력

2. 연산자
 - 연산자 종류를 알고, 결과를 예측할 수 있다.
 - 연산자 종류
 - 산술
  -- % : 나누었을 때 나머지를 구하는 것
  -- / : 정수 / 정수 => 정수, 1 / 2 => 0
 - 비교
  -- 대입 연산자와 ==를 구별, >= 와 <= 기호를  => 이나 =<로 잘못쓰지 않기
  -- 결과가 참 또는 거짓 => 조건식 
- 논리
  -- 결과가 참 또는 거짓 => 조건식 
  -- 연산자 양 쪽에 조건식
  -- && : ~하고, 둘다 참이면 참
  -- || : ~이거나, 둘다 거짓이면 거짓, 하나라도 참이면 참
 - 증감
  -- 최종적으로 1 증가
  -- 전위 : 증가 후 동작
  -- 후위 : 동작 후 증가
 - 조건선택
  -- 조건식 ? 참 : 거짓;
 - 비트논리(잘 사용안함)
 - 비트쉬프트(잘 사용안함)
 - 대입
  -- 오른쪽에 있는 값을 왼쪽에 저장(덮어쓰기)
 - 연산자 우선 순위 : ()

3. 조건문
 - 조건에 따라 결과가 달라지는 상황에서 조건문을 쓸 수 있다.
 - ~이면 ...해라
 - if문
  -- 모든 조건문은 if문으로 표현 가능

  -- 문법

if(조건식){
	실행문;
}

  -- ~ : 조건식, ... : 실행문

//조건식 1이 참이면 실행문 1을 실행
if(조건식1){
	실행문1;
}
//(조건식 1이 거짓이고) 조건식2가 참이면 실행문2를 실행
else if(조건식2){
	실행문2;
}
//(조건식 1과 조건식 2가 거짓이면)실행문3 실행
else{
	실행문3;
}
 - switch문
switch(식 또는 변수){
case 값1:
	실행문1;
	break;
case 값2:
	실행문2;
	break;
default:
	실행문3;
}


4. 반복문
 - 규칙적인 작업을 반복적으로 할 때 반복문을 사용할 수 있다.
 - 반복문은 조건식이 거짓이 되는 순간 반복문 종료(break는 예외, 항상 참이면 무한 루프)
 - for문

for(1.초기화; 2.5.8.조건식;4.7.증감식){
	3.6.실행문;
}
1. 초기화 : 조건식에서 사용하는 변수를 초기화, 생략가능, 여러 변수를 초기화
2. 조건식 : 반복분이 실행되는 곳으로 거짓이면 종료, 생략 가능(항상 참)
4. 증감식 : 조건식에서 사용하는 변수를 증가 / 감소 하여 반복횟수를 조절
 - 중첩 반복문
  -- 반복문의 실행문으로 반복문이 오는 경우
 - break
  -- 반복문을 빠져 나오는 키워드, 반드시 if문 사용
 - continue
  -- 반복문의 특정 위치로 이동하는 키워드, for문에서는 증감식으로 이동한다. while문에서는 조건식


집
1.ForPriomeNumberEx01 복습
2.NestingForEx02 복습
3.NestingForStarEx 복습
4.NestingForStarEx 거꾸로 된거 만들어보기
5.break문 복습